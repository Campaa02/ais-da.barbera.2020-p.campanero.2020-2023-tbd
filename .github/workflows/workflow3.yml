name: Run tests and push build to Okteto

on:
  push:
    branches:
      - release-**
  workflow_dispatch:
      
jobs:
  deploy_to_okteto:
    runs-on: ubuntu-latest
    steps:
      - name: Installing Okteto CLI
        run: |
          curl https://get.okteto.com -sSfL | sh
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Ejecutar Pruebas Unitarias
        run: mvn test -Dtest=BookServiceUnitTests
      - name: Ejecutar Pruebas de IntegraciÃ³n
        run: mvn test -Dtest=OpenLibraryServiceIntegrationTests
      - name: Ejecutar Pruebas de API Rest
        run: mvn test -Dtest=RestAssuredE2ETests
      - name: Ejecutar Pruebas de Selenium
        run: mvn test -Dtest=SeleniumE2ETests
      
      - name: Building Docker Image
        id: build-image
        run: |
          IMAGE_TAG="${{ secrets.DOCKERHUB_USERNAME }}/books-reviewer:${{ github.sha }}"
          mvn spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=$IMAGE_TAG
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Logging into Docker Hub
        run: |
          docker login --username="${{ secrets.DOCKERHUB_USERNAME }}" --password="${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Pushing Docker Image
        run: |
          docker push ${{ steps.build-image.outputs.image_tag }}
      - name: Closing Docker Hub
        run: |
          docker logout
      - name: Logging into Okteto
        run: |
          okteto context use https://cloud.okteto.com --token ${{ secrets.OKTETO_TOKEN }}
      - name: Deploy to Okteto
        run: |
          export VERSION=${{ github.sha }}
          okteto deploy --wait
      - name: Running Sanity Test
        run: |
          mvn -Dtest=SanityTest -Dhost="https://books-reviewer-tbd-campaa02.cloud.okteto.net" test
