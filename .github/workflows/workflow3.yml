name: Run tests and push build to Okteto

on:
  create:
  push:
    branches:
      - release-**
  workflow_dispatch:
      
jobs:
  run_if:
    if: startsWith(github.ref, 'release') 
    runs-on: ubuntu-latest
    steps:
      - name: Installing Okteto CLI
        run: |
          curl https://get.okteto.com -sSfL | sh
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      # - name: Ejecutar Pruebas Unitarias
      #   run: mvn test -Dtest=BookServiceUnitTests
      # - name: Ejecutar Pruebas de Integraci√≥n
      #   run: mvn test -Dtest=OpenLibraryServiceIntegrationTests
      # - name: Ejecutar Pruebas de API Rest
      #   run: mvn test -Dtest=RestAssuredE2ETests
      # - name: Ejecutar Pruebas de Selenium
      #   run: mvn test -Dtest=SeleniumE2ETests
      - name: Building Docker Image
        id: build-image
        run: |
          mvn spring-boot:build-image -DskipTests -Dspring-boot.build-image.imageName=pca06/books-reviewer:${{ github.sha }}
          echo "::set-output name=image_tag::$IMAGE_TAG"
      - name: Logging into Docker Hub
        run: |
          docker login --username="pca06" --password="${{ secrets.DOCKERHUB_TOKEN }}"
      - name: Pushing Docker Image
        run: |
          docker push pca06/books-reviewer:${{ steps.build-image.outputs.image_tag }}
      - name: Save Docker image as artifact
        run: docker save --output image.tar ${{ steps.build-image.outputs.image_tag }}
      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build-image.outputs.image_tag }}
          path: image.tar
          retention-days: 1
      - name: Closing Docker Hub
        run: |
          docker logout
      - name: Logging into Okteto
        run: |
          okteto context use https://cloud.okteto.com --token ${{ secrets.OKTETO_TOKEN }}
      - name: Deploying to Okteto
        run: |
          okteto deploy --wait --build
